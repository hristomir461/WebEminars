@model WebEminari.Web.ViewModels.WebEminars.WebEminarViewModel
@using Ganss.XSS;
@{
    this.ViewData["Title"] = Model.Title;
    int maxStars = 5;
    var sanitizer = new HtmlSanitizer();
    sanitizer.AllowedSchemes.Add("data");
    bool isLoggedIn = User.Identity.IsAuthenticated;
    bool userCanBook = isLoggedIn && !Model.UsersBooked.Contains(User.Identity.Name) && Model.MaxPeople > 0;
}
<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.6/css/bootstrap.min.css'>
<link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'>
<p>От: @Model.AddedByUserFirstName @Model.AddedByUserLastName</p>
        <input type="hidden" id="stars" value="@Model.AverageVote" />
        <div id="app">
            <star-rating v-model="rating" :max-stars="5"></star-rating>
            <span id="averageVoteValue">@Model.AverageVote.ToString("0.0")</span><span> / @maxStars</span>

            <template id="star-rating-template">
                <span>

                    <i style="font-size: 20px" v-for="(n, index) in maxStars"
                       :class="getClass(n)"
                       :style="getStyle(n)"
                       v-on:click="$emit('input', n)"><i style="color: transparent">{{index + 1}}</i></i>

                </span>
            </template>
        </div>

    </ul>
</li>
<br />
<br />
<center>
    <h1>@Model.Title</h1>
    @if (Model.ImageName != null)
    {
        <img class="card-img-top" src="~/Images/@Model.ImageName" width="100" height="300" alt="Card image cap">
    }
    else
    {
        <iframe width="560"
                height="315"
                src="@Model.VideoUrl"
                frameborder="0"
                allowfullscreen></iframe>
    }
    <p>@Html.Raw(sanitizer.Sanitize(Model.Description))</p>
</center>
@if (Model.ImageName != null)
{
    <h4>Дата: @Model.DateTime.ToShortDateString()</h4>
    <h4>Час: @Model.DateTime.ToShortTimeString()</h4>
}
<h4>Тема: @Model.CategoryName</h4>
@if (Model.UsersBooked.Contains(User.Identity.Name))
{
    <h4>Meet Link: @Model.MeetLink</h4>
    foreach (var user in Model.UsersNamesBooked)
    {
        <p>@user</p>
    }

}
@if (Model.ImageName != null && Model.DateTime >= DateTime.UtcNow)
{
    <h4>Aveilable bookings: @Model.MaxPeople</h4>   
}
@if (Model.ImageName != null && Model.DateTime <= DateTime.UtcNow)
{
    <h4>Izminal</h4>
}
@if (Model.ImageName == null)
{
    <h4>Kachen</h4>
}
@if (userCanBook)
{
    <form method="post" asp-action="BookForEvent">
        @if (Model.ImageName != null && Model.DateTime >= DateTime.UtcNow)
        {
            <input type="hidden" name="EventId" value="@Model.Id" />

            <button class="btn btn-primary">Book for Event</button>
        }
    </form>
}

<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>


    <script>
        Vue.component("star-rating", {
            props: {
                value: { type: Number, default: 0 },
                maxStars: { type: Number, default: 5 },
                starredColor: { type: String, default: "orange" },
                blankColor: { type: String, default: "darkgray" }
            },
            template: "#star-rating-template",
            methods: {
                getClass(n) {
                    return {
                        "fa": true,
                        "fa-star": n <= this.value,
                        "fa-star-o": n > this.value
                    }
                },
                getStyle(n) {
                    return {
                        color: n <= this.value ? this.starredColor : this.blankColor
                    }
                }
            }
        })

        new Vue({
            el: "#app",
            data: {
                rating: @Model.AverageVote
            }
        })

    </script>
    <script>
         $("i").each(function (el) {
             $(this).click(function () {
                 var value = $(this.innerHTML).html();
                var webEminarId = @Model.Id;
                var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                var data = { webEminarId: webEminarId, value: value };
                $.ajax({
                    type: "POST",
                    url: "/api/Votes",
                    data: JSON.stringify(data),
                    headers: {
                        'X-CSRF-TOKEN': antiForgeryToken
                    },
                    success: function (data) {
                        $('#averageVoteValue').html(data.averageVote.toFixed(1));
                    },
                    contentType: 'application/json',
                });
            })
        });
    </script>
}